Name: CVE-2012-5371
Status: Candidate
URL: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2012-5371
Phase: Assigned (20121010)
Category: 
Reference: MISC:http://2012.appsec-forum.ch/conferences/#c17
Reference: MISC:http://asfws12.files.wordpress.com/2012/11/asfws2012-jean_philippe_aumasson-martin_bosslet-hash_flooding_dos_reloaded.pdf
Reference: MISC:http://www.ocert.org/advisories/ocert-2012-001.html
Reference: MISC:https://www.131002.net/data/talks/appsec12_slides.pdf
Reference: CONFIRM:http://www.ruby-lang.org/en/news/2012/11/09/ruby19-hashdos-cve-2012-5371/
Reference: CONFIRM:https://bugzilla.redhat.com/show_bug.cgi?id=875236
Reference: UBUNTU:USN-1733-1
Reference: URL:http://www.ubuntu.com/usn/USN-1733-1
Reference: BID:56484
Reference: URL:http://www.securityfocus.com/bid/56484
Reference: OSVDB:87280
Reference: URL:http://www.osvdb.org/87280
Reference: SECTRACK:1027747
Reference: URL:http://securitytracker.com/id?1027747
Reference: SECUNIA:51253
Reference: URL:http://secunia.com/advisories/51253
Reference: XF:ruby-hash-function-dos(79993)
Reference: URL:https://exchange.xforce.ibmcloud.com/vulnerabilities/79993

Ruby (aka CRuby) 1.9 before 1.9.3-p327 and 2.0 before r37575 computes
hash values without properly restricting the ability to trigger hash
collisions predictably, which allows context-dependent attackers to
cause a denial of service (CPU consumption) via crafted input to an
application that maintains a hash table, as demonstrated by a
universal multicollision attack against a variant of the MurmurHash2
algorithm, a different vulnerability than CVE-2011-4815.


Current Votes:
None (candidate not yet proposed)


