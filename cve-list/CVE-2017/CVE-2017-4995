Name: CVE-2017-4995
Status: Candidate
URL: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-4995
Phase: Assigned (20161229)
Category: 
Reference: CONFIRM:https://pivotal.io/security/cve-2017-4995
Reference: BID:99080
Reference: URL:http://www.securityfocus.com/bid/99080

An issue was discovered in Pivotal Spring Security 4.2.0.RELEASE
through 4.2.2.RELEASE, and Spring Security 5.0.0.M1. When configured to
enable default typing, Jackson contained a deserialization
vulnerability that could lead to arbitrary code execution. Jackson
fixed this vulnerability by blacklisting known "deserialization
gadgets." Spring Security configures Jackson with global default typing
enabled, which means that (through the previous exploit) arbitrary code
could be executed if all of the following is true: (1) Spring
Security's Jackson support is being leveraged by invoking
SecurityJackson2Modules.getModules(ClassLoader) or
SecurityJackson2Modules.enableDefaultTyping(ObjectMapper); (2) Jackson
is used to deserialize data that is not trusted (Spring Security does
not perform deserialization using Jackson, so this is an explicit
choice of the user); and (3) there is an unknown (Jackson is not
blacklisting it already) "deserialization gadget" that allows code
execution present on the classpath. Jackson provides a blacklisting
approach to protecting against this type of attack, but Spring Security
should be proactive against blocking unknown "deserialization gadgets"
when Spring Security enables default typing.


Current Votes:
None (candidate not yet proposed)


